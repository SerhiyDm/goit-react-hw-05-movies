{"version":3,"file":"static/js/429.b096bef8.chunk.js","mappings":"wMAEaA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACvC,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACE,gCACGJ,IAAQ,wBAAKA,IACJ,OAATD,IACC,wBACGA,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBAEI,SAAC,KAAD,CACEC,GAAE,UAAKP,GAAL,OAAYK,GACdG,MAAO,CAAEC,KAAK,GAAD,OAAKP,GAAL,OAAgBC,IAF/B,SAIGG,KANED,EADD,QAgBnB,C,wFCtBYK,EAAc,SAAAC,GAAO,OAChCC,EAAAA,GAAAA,MAAYD,EAAS,CACnBE,SAAU,IACVC,SAAU,aAEVC,MAAO,CACLC,gBAAiB,MACjBC,QAAS,GACTC,MAAO,OACPC,MAAO,QACPC,SAAU,SAEZC,KAAM,eACNC,UAAW,CACTC,KAAM,SACN,YAAa,WAfe,EAmBlCb,EAAYc,UAAY,CACtBb,QAASc,IAAAA,OAAAA,W,oLClBEC,EAAiB,WAC5B,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAYA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUjC,EAFV,OAGI+B,EAAY/B,EAAKkC,SAHrB,iDAKItB,EAAAA,EAAAA,GAAY,KAAMC,SALtB,0DAFc,0DACdsB,EASD,GAAE,KAED,iCACE,SAAC,KAAD,KACA,SAACpC,EAAA,EAAD,CAAYC,KAAM8B,EAAU7B,KAAK,kBAAkBC,KAAK,cAG7D,ECXD,EAVa,WACX,OACE,2BACE,SAAC,EAAAkC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAACV,EAAD,OAIP,C,2NCTDW,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHP,EAAmB,mCAAG,sGACVM,EAAAA,EAAAA,IAAA,qCACSC,EADT,YADU,uBACzBxC,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qDAOnByC,EAAU,mCAAG,WAAMlC,GAAN,yFACDgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,oBAAiCiC,IADhC,uBAChBxC,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKV0C,EAAY,mCAAG,WAAMnC,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,4BAAyCiC,IADtC,uBAClBxC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ2C,EAAY,mCAAG,WAAMpC,GAAN,yFACHgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,4BAAyCiC,IADtC,uBAClBxC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ4C,EAAU,mCAAG,WAAMC,GAAN,yFACDN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,IAFnB,uBAChB7C,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOV8C,EAAe,SAAC5C,EAAM6C,GAAP,MA/BJ,8BA+BsCA,EAAO7C,CAAzC,C","sources":["components/MoviesList.jsx","components/Notify/Notify.jsx","components/MoviesTrending.jsx","pages/Home.jsx","services/rest_api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nexport const MoviesList = ({ data, text, path }) => {\n  const { pathname, search } = useLocation();\n  return (\n    <>\n      {text && <h1>{text}</h1>}\n      {data !== null && (\n        <ul>\n          {data.map(({ id, title }) => (\n            <li key={id}>\n              {\n                <Link\n                  to={`${path}${id}`}\n                  state={{ from: `${pathname}${search}` }}\n                >\n                  {title}\n                </Link>\n              }\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired),\n  text: PropTypes.string,\n  path: PropTypes.string,\n};\n","import toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nexport const NotifyError = message =>\n  toast.error(message, {\n    duration: 3000,\n    position: 'top-center',\n\n    style: {\n      backgroundColor: 'red',\n      opacity: 0.5,\n      width: '50vw',\n      color: 'white',\n      fontSize: '1.5em',\n    },\n    icon: 'ðŸ¤”',\n    ariaProps: {\n      role: 'status',\n      'aria-live': 'polite',\n    },\n  });\n\nNotifyError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/rest_api';\nimport { NotifyError } from './Notify/Notify';\nimport { Toaster } from 'react-hot-toast';\nimport { MoviesList } from './MoviesList';\nexport const MoviesTrending = () => {\n  const [trending, setTrending] = useState(null);\n  useEffect(() => {\n    getTrending();\n    async function getTrending() {\n      try {\n        const data = await fetchTrendingMovies();\n        setTrending(data.results);\n      } catch (error) {\n        NotifyError(error.message);\n      }\n    }\n  }, []);\n  return (\n    <>\n      <Toaster />\n      <MoviesList data={trending} text=\"Trending movies\" path=\"movies/\" />\n    </>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport { MoviesTrending } from 'components/MoviesTrending';\nconst Home = () => {\n  return (\n    <main>\n      <Suspense fallback={<Loader />}>\n        <MoviesTrending />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2da3e938b4dbf31e7c00d8a01ff91cc3';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchQuery = async value => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${value}`\n  );\n  return data;\n};\n\nexport const getPosterUrl = (path, size) => BASE_POSTER_URL + size + path;\n"],"names":["MoviesList","data","text","path","useLocation","pathname","search","map","id","title","to","state","from","NotifyError","message","toast","duration","position","style","backgroundColor","opacity","width","color","fontSize","icon","ariaProps","role","propTypes","PropTypes","MoviesTrending","useState","trending","setTrending","useEffect","fetchTrendingMovies","results","getTrending","Suspense","fallback","Loader","axios","API_KEY","fetchMovie","fetchCredits","fetchReviews","fetchQuery","value","getPosterUrl","size"],"sourceRoot":""}