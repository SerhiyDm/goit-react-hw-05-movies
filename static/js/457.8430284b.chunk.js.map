{"version":3,"file":"static/js/457.8430284b.chunk.js","mappings":"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","sources":["components/Notify/Notify.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/rest_api.js"],"sourcesContent":["import toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nexport const NotifyError = message =>\n  toast.error(message, {\n    duration: 3000,\n    position: 'top-center',\n\n    style: {\n      backgroundColor: 'red',\n      opacity: 0.5,\n      width: '50vw',\n      color: 'white',\n      fontSize: '1.5em',\n    },\n    icon: 'ðŸ¤”',\n    ariaProps: {\n      role: 'status',\n      'aria-live': 'polite',\n    },\n  });\n\nNotifyError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  display: ${p => (p.display ? p.display : 'block')};\n  gap: 10px;\n  padding: ${p => p.padding};\n  box-shadow: 0px 8px 8px -6px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 0px 8px 8px -6px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px 8px 8px -6px rgba(0, 0, 0, 0.75);\n`;\nexport const InfoWraper = styled.div`\n  width: auto;\n`;\n","import { Link } from 'react-router-dom';\nimport { getPosterUrl } from 'services/rest_api';\nimport { Wraper, InfoWraper } from './MovieInfo.styled';\n// import PropTypes, { arrayOf } from 'prop-types';\n\nconst MovieInfo = ({ data }) => {\n  const { title, poster_path, overview, genres, vote_average } = data;\n  return (\n    <>\n      {' '}\n      <Wraper padding={'15px'} display={'flex'}>\n        <img src={getPosterUrl(poster_path, 'w200')} alt=\"\" />\n        <InfoWraper>\n          <h1>{title}</h1>\n          <p>User Score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n        </InfoWraper>\n      </Wraper>\n      <Wraper padding={'20px'}>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"review\">Review</Link>\n          </li>\n        </ul>\n      </Wraper>\n    </>\n  );\n};\nexport default MovieInfo;\n\n// MovieInfo.propTypes = PropTypes.shape({\n//   title: PropTypes.string,\n//   poster_path: PropTypes.string,\n//   overview: PropTypes.string,\n//   genres: arrayOf(PropTypes.string),\n//   vote_average: PropTypes.number,\n// });\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 4px 4px 2px;\n  color: black;\n  border-radius: 4px;\n  text-decoration: none;\n  box-shadow: 0px 0px 18px 0px rgba(0, 0, 0, 0.15) inset;\n\n  :hover {\n    color: green;\n  }\n`;","import { BsFillCaretLeftFill } from 'react-icons/bs';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsFillCaretLeftFill size=\"14\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { NotifyError } from 'components/Notify/Notify';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/rest_api';\nimport { Toaster } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState(null);\n  const location = useLocation();\n  const backLinkParams = location.state?.from;\n  const backRef = useRef(backLinkParams).current;\n  useEffect(() => {\n    const getData = async id => {\n      try {\n        const data = await fetchMovie(id);\n        setData(data);\n      } catch (error) {\n        NotifyError(error.message);\n      } finally {\n      }\n    };\n    getData(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Toaster />\n      <BackLink to={backRef}>Go Back</BackLink>\n      <Suspense fallback={<Loader />}>\n        {data && <MovieInfo data={data} />}\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2da3e938b4dbf31e7c00d8a01ff91cc3';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovie = async id => {\n  const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchQuery = async value => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${value}`\n  );\n  return data;\n};\n\nexport const getPosterUrl = (path, size) => BASE_POSTER_URL + size + path;\n"],"names":["NotifyError","message","toast","duration","position","style","backgroundColor","opacity","width","color","fontSize","icon","ariaProps","role","propTypes","PropTypes","Wraper","styled","p","display","padding","InfoWraper","data","title","poster_path","overview","genres","vote_average","src","getPosterUrl","alt","map","genre","name","join","to","StyledLink","Link","BackLink","children","size","movieId","useParams","useState","setData","backLinkParams","useLocation","state","from","backRef","useRef","current","useEffect","getData","id","fetchMovie","Suspense","fallback","Loader","axios","API_KEY","fetchTrendingMovies","fetchCredits","fetchReviews","fetchQuery","value","path"],"sourceRoot":""}